{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAOMC,GAJaC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACvBD,SAASC,cAAc,UAC9BD,SAASC,cAAc,UAGpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAQ,CAACL,WAAUC,SACzB,OAAO,IAAIK,SAAS,SAACC,EAASC,G,OAC9BC,YAAW,WACLP,EACJK,EAAQF,GAERG,EAAOH,E,GAENJ,E,IAILL,EAAKc,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAEC,iBAMF,IALA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBZ,MAAOgB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACfC,EAAiBC,OAAOF,EAAOb,OAC/BgB,EAAcD,OAAOJ,EAAMX,OAC3BiB,EAAaF,OAAOH,EAAKZ,OAEtBkB,EAAI,EAAGA,GAAKJ,EAAgBI,GAAK,EAC1CxB,EAAcwB,EAAIF,EAAcC,GAAYC,EAAE,IAC7CC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAA0CC,OAAhB7B,EAAU,QAAY6B,OAAN5B,EAAM,M,IAEzE6B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,EAAAhC,GAASiC,OAAOI,QAAQ,sBAAuCF,OAAhB7B,EAAU,QAAY6B,OAAN5B,EAAM,M,IAIvEL,EAAKoC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst delayField = document.querySelector('input[name=\"delay\"]');\nconst stepField = document.querySelector('input[name=\"step\"]');\nconst amountField = document.querySelector('input[name=\"amount\"]');\nconst submitButon = document.querySelector('button');\nconst form = document.querySelector('.form');\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const value = {position, delay};\n  return new Promise ((resolve, reject) =>\n  setTimeout(() => {\n    if (shouldResolve) {\n    resolve(value);\n  } else {\n    reject(value);\n  }\n  }, delay)\n  )\n}\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit (e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  const positionNumber = Number(amount.value);\n  const delayNumber = Number(delay.value);\n  const stepNumber = Number(step.value);\n\n  for (let i = 1; i <= positionNumber; i += 1) {\n  createPromise(i, (delayNumber + stepNumber*(i-1)))\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${(position)} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${(position)} in ${delay}ms`)\n  });\n  }\n\n  form.reset();\n}\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","value","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","positionNumber","Number","delayNumber","stepNumber","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.bfe45f84.js.map"}